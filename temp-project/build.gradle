plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
}

group = 'cn.xor7'
version = '1.3.5'
archivesBaseName = 'iseeyou'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/central' }
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://repo.replaymod.com/' }
}

dependencies {
    // Minecraft (使用更通用的依赖方式)
    compileOnly 'com.mojang:minecraft:1.20.4'
    
    // Fabric API
    compileOnly 'net.fabricmc:fabric-loader:0.15.0'
    compileOnly 'net.fabricmc.fabric-api:fabric-api-base:0.4.30+8f4004b8c0'
    
    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.0'
    
    // ReplayMod (作为外部依赖)
    compileOnly 'com.replaymod:replaymod:1.20.4-2.6.12'
    
    // 工具库
    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    implementation 'net.jodah:expiringmap:0.5.11'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

// 处理资源文件
processResources {
    inputs.property 'version', version
    filesMatching('fabric.mod.json') {
        expand 'version': version
    }
}

// 确保Java编译使用UTF-8
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Kotlin编译设置
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17'
    }
}

// 创建源码jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// 完成jar打包时包含LICENSE
jar {
    from('LICENSE') {
        rename { "${it}_${archivesBaseName}" }
    }
} 